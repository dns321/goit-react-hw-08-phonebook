{"version":3,"sources":["views/RegistrationView.js"],"names":["RegistrationView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","onSubmit","autoComplete","className","type","placeholder","onChange","Component","mapDispatchToProps","authOperation","register","connect"],"mappings":"+PAKMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WAAU,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SAErB,OACE,gCACE,mDACA,iEAEA,uBACEW,SAAUD,KAAKL,aACfO,aAAa,MACbC,UAAU,oBAHZ,UAKE,wBAAOA,UAAU,qBAAjB,iBAEE,uBACEC,KAAK,OACLhB,KAAK,OACLiB,YAAY,OACZZ,MAAOL,EACPkB,SAAUN,KAAKT,kBAInB,wBAAOY,UAAU,qBAAjB,kBAEE,uBACEC,KAAK,QACLhB,KAAK,QACLiB,YAAY,oBACZZ,MAAOJ,EACPiB,SAAUN,KAAKT,kBAInB,wBAAOY,UAAU,qBAAjB,qBAEE,uBACEC,KAAK,WACLhB,KAAK,WACLiB,YAAY,6BACZZ,MAAOH,EACPgB,SAAUN,KAAKT,kBAInB,wBAAQa,KAAK,SAAb,oC,GAjEqBG,aA4EzBC,EAAqB,CACzBT,WAAYU,IAAcC,UAGbC,sBAAQ,KAAMH,EAAdG,CAAkCzB","file":"static/js/RegistrationView.9340503b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/StyleViews.scss';\nimport { connect } from 'react-redux';\nimport authOperation from '../redux/auth/auth-operation';\n\nclass RegistrationView extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <div>\n        <h1>Registration page</h1>\n        <h2>Please enter Login and Password</h2>\n\n        <form\n          onSubmit={this.handleSubmit}\n          autoComplete=\"off\"\n          className=\"registration-form\"\n        >\n          <label className=\"registration-label\">\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className=\"registration-label\">\n            Email\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"example@gmail.com\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className=\"registration-label\">\n            Password\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter minimum 7 characters\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button type=\"submit\">Registration</button>\n        </form>\n      </div>\n    );\n  }\n}\n\n// const mapDispatchToProps = dispatch => ({\n//   onRegister: data => dispatch(authOperation.register(data)),\n// });\n\nconst mapDispatchToProps = {\n  onRegister: authOperation.register,\n};\n\nexport default connect(null, mapDispatchToProps)(RegistrationView);\n"],"sourceRoot":""}