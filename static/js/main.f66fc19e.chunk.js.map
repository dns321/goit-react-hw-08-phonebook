{"version":3,"sources":["redux/contact/contact-actions.js","Components/container/Container.js","routes/HomeRoutes.js","routes/ContactsRoutes.js","routes/AuthNavRoutes.js","redux/auth/auth-selectors.js","Components/header/UserMenu.js","Components/header/Header.js","Components/PrivateRoute.js","Components/PublicRoute.js","Components/main/Main.js","App.js","redux/contact/contact-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/auth/auth-operation.js","redux/auth/auth-action.js","Components/loader/Loader.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","Container","children","className","HomeRoutes","name","path","exact","component","lazy","ContactsRoutes","AuthNav","state","auth","isAuthenticated","user","mapDispatchToProps","onLogout","authOperations","logOut","connect","authSelectors","type","onClick","map","to","activeClassName","Component","redirectTo","routeProps","render","props","restricted","Main","this","onGetCurrentUser","fallback","Loader","from","getCurrentUser","App","items","createReducer","_","payload","filter","contact","id","loading","error","combineReducers","initialUserState","email","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","registerError","loginError","logoutError","getCurrentUserError","registerRequest","loginRequest","logoutRequest","getCurrentUserRequest","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactReducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","respons","data","message","logIn","getState","persistedToken","get","response","Load","color","height","width"],"mappings":"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","file":"static/js/main.f66fc19e.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterContact = createAction('contact/changeFilter');\n","import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\n\nexport default Container;\n","import { lazy } from 'react';\n\nexport const HomeRoutes = [\n  {\n    name: 'Home',\n    path: '/',\n    exact: true,\n    component: lazy(() =>\n      import('../views/HomeView' /* webpackChunkName: 'HomeView' */),\n    ),\n  },\n];\n","import { lazy } from 'react';\n\nexport const ContactsRoutes = [\n  {\n    name: 'Contacts',\n    path: '/contacts',\n    exact: false,\n    component: lazy(() =>\n      import('../views/ContactsView' /* webpackChunkName: 'ContactsView' */),\n    ),\n  },\n];\n","import { lazy } from 'react';\n\nexport const AuthNav = [\n  {\n    name: 'Register',\n    path: '/register',\n    exact: false,\n    component: lazy(() =>\n      import(\n        '../views/RegistrationView' /* webpackChunkName: 'RegistrationView' */\n      ),\n    ),\n  },\n  {\n    name: 'Login',\n    path: '/login',\n    exact: false,\n    component: lazy(() =>\n      import('../views/LoginView' /* webpackChunkName: 'LoginView' */),\n    ),\n  },\n];\n","// const getIsAuthenticated = state => Boolean(state.auth.token);\n\nconst getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUserName = state => state.auth.user.name;\n\nconst getLoading = state => state.auth.loading;\n\nexport default { getIsAuthenticated, getUserName, getLoading };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport authOperations from '../../redux/auth/auth-operation';\nimport './UserMenu.scss';\n\nconst UserMenu = ({ name, onLogout }) => {\n  return (\n    <div className=\"user-menu-container\">\n      <span className=\"user-menu-name\">Welcome, {name}</span>\n      <button type=\"button\" onClick={onLogout}>\n        Logout\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  name: authSelectors.getUserName(state),\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { HomeRoutes } from '../../routes/HomeRoutes';\nimport { ContactsRoutes } from '../../routes/ContactsRoutes';\nimport { AuthNav } from '../../routes/AuthNavRoutes';\nimport './Header.scss';\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport UserMenu from './UserMenu';\n\nconst Header = ({ isAuthenticated }) => {\n  return (\n    <header>\n      <nav className=\"nav-list\">\n        <ul className=\"nav-items-list\">\n          {HomeRoutes.map(({ name, path, exact }) => (\n            <li key={path} className=\"nav-item-list\">\n              <NavLink\n                to={path}\n                exact={exact}\n                className=\"nav-item-link\"\n                activeClassName=\"activ-nav-item-link\"\n              >\n                {name}\n              </NavLink>\n            </li>\n          ))}\n          {isAuthenticated && (\n            <>\n              {ContactsRoutes.map(({ name, path, exact }) => (\n                <li key={path} className=\"nav-item-list\">\n                  <NavLink\n                    to={path}\n                    exact={exact}\n                    className=\"nav-item-link\"\n                    activeClassName=\"activ-nav-item-link\"\n                  >\n                    {name}\n                  </NavLink>\n                </li>\n              ))}\n            </>\n          )}\n        </ul>\n        {isAuthenticated ? (\n          <UserMenu />\n        ) : (\n          <ul className=\"nav-items-list\">\n            {AuthNav.map(({ name, path, exact }) => (\n              <li key={path} className=\"nav-item-list\">\n                <NavLink\n                  to={path}\n                  exact={exact}\n                  className=\"nav-item-link\"\n                  activeClassName=\"activ-nav-item-link\"\n                >\n                  {name}\n                </NavLink>\n              </li>\n            ))}\n          </ul>\n        )}\n      </nav>\n    </header>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { Suspense, Component } from 'react';\nimport Loader from '../../Components/loader/Loader';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { ContactsRoutes } from '../../routes/ContactsRoutes';\nimport { HomeRoutes } from '../../routes/HomeRoutes';\nimport { AuthNav } from '../../routes/AuthNavRoutes';\nimport { connect } from 'react-redux';\nimport authOperations from '../../redux/auth/auth-operation';\nimport PrivatRoute from '../PrivateRoute';\nimport PublicRoute from '../PublicRoute';\n\nclass Main extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <main>\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            {HomeRoutes.map(({ path, exact, component }) => (\n              <Route\n                exact={exact}\n                path={path}\n                component={component}\n                key={path}\n              />\n            ))}\n            {ContactsRoutes.map(({ path, exact, component }) => (\n              <PrivatRoute\n                exact={exact}\n                path={path}\n                component={component}\n                key={path}\n                redirectTo=\"/login\"\n              />\n            ))}\n            {AuthNav.map(({ path, exact, component }) => (\n              <PublicRoute\n                exact={exact}\n                path={path}\n                component={component}\n                key={path}\n                redirectTo=\"/contacts\"\n                restricted\n              />\n            ))}\n            <Redirect from=\"\" to=\"/\" />\n          </Switch>\n        </Suspense>\n      </main>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(Main);\n","import React from 'react';\nimport './App.scss';\nimport Container from './Components/container/Container';\nimport Header from './Components/header/Header';\nimport Main from './Components/main/Main';\n\nconst App = () => {\n  return (\n    <Container>\n      <Header />\n      <Main />\n    </Container>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n} from './contact-actions';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-action';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [registerError]: (_, { payload }) => payload,\n  [loginError]: (_, { payload }) => payload,\n  [logoutError]: (_, { payload }) => payload,\n  [getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [registerSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [registerError]: () => false,\n  [loginError]: () => false,\n  [getCurrentUserError]: () => false,\n  [logoutSuccess]: () => false,\n});\n\nconst loading = createReducer(false, {\n  [registerRequest]: () => true,\n  [registerSuccess]: () => false,\n  [registerError]: () => false,\n  [loginRequest]: () => true,\n  [loginSuccess]: () => false,\n  [loginError]: () => false,\n  [logoutRequest]: () => true,\n  [logoutSuccess]: () => false,\n  [logoutError]: () => false,\n  [getCurrentUserRequest]: () => true,\n  [getCurrentUserSuccess]: () => false,\n  [getCurrentUserError]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  loading,\n  error,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport contactReducer from './contact/contact-reducer';\nimport authReducer from './auth/auth-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n// const rootReducer = combineReducers({\n//   contacts: contactReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-action';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(registerRequest());\n\n  try {\n    const respons = await axios.post('/users/signup', credentials);\n\n    token.set(respons.data.token);\n    dispatch(registerSuccess(respons.data));\n  } catch (error) {\n    dispatch(registerError(error.message));\n  }\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(loginRequest());\n\n  try {\n    const respons = await axios.post('/users/login', credentials);\n\n    token.set(respons.data.token);\n    dispatch(loginSuccess(respons.data));\n  } catch (error) {\n    dispatch(loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logIn, logOut, getCurrentUser };\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\nexport const logoutRequest = createAction('auth/logoutRequest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\nexport const getCurrentUserRequest = createAction('auth/gerCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/gerCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/gerCurrentUserError');\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './Loader.scss';\n\nexport default class Load extends Component {\n  //other logic\n  render() {\n    return (\n      <Loader\n        className=\"Loader\"\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={100}\n        width={300}\n        // timeout={3000} //3 secs\n      />\n    );\n  }\n}\n"],"sourceRoot":""}